@inherits LayoutComponentBase
@inject NavigationManager Navigation
<RadzenComponents/>

<RadzenLayout>
    @if (_isLoggedIn)
     {
         <RadzenHeader>
              <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0">
                  <RadzenSidebarToggle Click="@(() => _sidebarExpanded = !_sidebarExpanded)"/>
                  <RadzenLabel Text="Beer Economy Admin"/>
              </RadzenStack>
          </RadzenHeader>
          <RadzenSidebar @bind-Expanded="@_sidebarExpanded">
              <RadzenPanelMenu>
                  <RadzenPanelMenuItem Text="Home" Icon="home"/>
                  <RadzenPanelMenuItem Text="Users" Icon="account_box"/>
              </RadzenPanelMenu>
              <div class="rz-p-4">
                  Sidebar
              </div>
          </RadzenSidebar>
          <RadzenBody>
              <div class="rz-p-4">
                  @Body
              </div>
          </RadzenBody>
          <RadzenFooter>
              Footer
          </RadzenFooter>
     }
     else
     {
         <RadzenBody>
             <div class="rz-p-4">
                <RadzenLogin Login="@(args => HandleLogin(args.Username, args.Password))" AllowRememberMe="@false" AllowRegister="@false" />
             </div>
         </RadzenBody>
     }
</RadzenLayout>



@code {
    private bool _sidebarExpanded = true;
    private bool _isLoggedIn;

    private async Task HandleLogin(string username, string password)
    {
        _isLoggedIn = await Login(username, password);
        if (_isLoggedIn)
        {
            Navigation.NavigateTo("/");
        }
    }

    private Task<bool> Login(string username, string password)
    {
        var adminUsername = Environment.GetEnvironmentVariable("ADMIN_USERNAME");
        var adminPassword = Environment.GetEnvironmentVariable("ADMIN_PASSWORD");

        return Task.FromResult(username == adminUsername && password == adminPassword);
    }
}