// <auto-generated />
using System;
using BeerEconomy.DataStorageService.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BeerEconomy.DataStorageService.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240711161317_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BeerEconomy.DataStorageService.Database.Entities.BeerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("desc");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("beers");
                });

            modelBuilder.Entity("BeerEconomy.DataStorageService.Database.Entities.PriceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BeerId")
                        .HasColumnType("integer")
                        .HasColumnName("beer_id");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int>("SourceId")
                        .HasColumnType("integer")
                        .HasColumnName("source_id");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("BeerId");

                    b.HasIndex("SourceId");

                    b.ToTable("prices");
                });

            modelBuilder.Entity("BeerEconomy.DataStorageService.Database.Entities.SourceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BeerId")
                        .HasColumnType("integer")
                        .HasColumnName("beer_id");

                    b.Property<int>("Source")
                        .HasColumnType("integer")
                        .HasColumnName("source");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id");

                    b.HasIndex("BeerId");

                    b.ToTable("sources");
                });

            modelBuilder.Entity("BeerEconomy.DataStorageService.Database.Entities.PriceEntity", b =>
                {
                    b.HasOne("BeerEconomy.DataStorageService.Database.Entities.BeerEntity", "Beer")
                        .WithMany("Prices")
                        .HasForeignKey("BeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeerEconomy.DataStorageService.Database.Entities.SourceEntity", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beer");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("BeerEconomy.DataStorageService.Database.Entities.SourceEntity", b =>
                {
                    b.HasOne("BeerEconomy.DataStorageService.Database.Entities.BeerEntity", "Beer")
                        .WithMany("Sources")
                        .HasForeignKey("BeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Beer");
                });

            modelBuilder.Entity("BeerEconomy.DataStorageService.Database.Entities.BeerEntity", b =>
                {
                    b.Navigation("Prices");

                    b.Navigation("Sources");
                });
#pragma warning restore 612, 618
        }
    }
}
